"""
Django settings for cardealer project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '934nw3r62@!m0^ksgw3#31tntglnr%td+-_b89xpu2@q2zqv=d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['floating-badlands-41165.herokuapp.com', 'cardealerapp.co', 'www.cardealerapp.co', '127.0.0.1:8000']
# ALLOWED_HOSTS = ['198.211.99.20', 'localhost', '127.0.0.1', 'recarnation-env.eba-iywfdcrf.us-east-1.elasticbeanstalk.com', 'trial-1988947.okta.com' ]
ALLOWED_HOSTS = ['*']
LOGIN_REDIRECT_URL = '/dashboard/'

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'cars.apps.CarsConfig',
    'pages.apps.PagesConfig',
    'accounts.apps.AccountsConfig',
    'contacts.apps.ContactsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    'django.contrib.humanize',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'storages',
    'mozilla_django_oidc',

    # Providers
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'allauth.account.middleware.AccountMiddleware' 
]

ROOT_URLCONF = 'cardealer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cardealer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#      'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'cardealer_db',
#         'USER': 'postgres', 
#         'PASSWORD': 'welcome@123', 
#         'HOST': '127.0.0.1',
# 		'PORT': '5432',
#         'OPTIONS': {
#             'options': '-c timezone=UTC'  # Ensures all sessions use UTC
#         },
#      }
# }

DATABASES = {
     'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'recarnation',
        'USER': 'cardb', 
        'PASSWORD': 'temp_password', 
        'HOST': 'recarnation-db.cd2e84me0t5r.us-east-1.rds.amazonaws.com',
		'PORT': '5432',
        'OPTIONS': {
            'options': '-c timezone=UTC'  # Ensures all sessions use UTC
        },
     }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,"cardealer","static"),
]

# Media settings
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Messages
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}


# Whitenoise settings
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Django Allauth settings for user account and authentication management
ACCOUNT_EMAIL_REQUIRED = True  # Email is required for registration
ACCOUNT_AUTHENTICATION_METHOD = "username_email"  # Authenticate using either username or email
ACCOUNT_UNIQUE_EMAIL = True  # Ensure unique email addresses
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True  # Automatically log in after email confirmation
ACCOUNT_ADAPTER = 'allauth.account.adapter.DefaultAccountAdapter'

# Email backend for development (prints to console)
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

SOCIALACCOUNT_LOGIN_ON_GET = True
SOCIALACCOUNT_ADAPTER = 'allauth.socialaccount.adapter.DefaultSocialAccountAdapter'
#SOCIAL_AUTH_GOOGLE_OAUTH2_KEY =  ""
#SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ""
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = "http://127.0.0.1:8000/accounts/social/login/google/google/login/callback/"
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'APP': {
            'client_id': '86392028116-gg463k4buiktaioqq3odqr4j82dnv0bl.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
    }
}


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default backend
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth backend
    'mozilla_django_oidc.auth.OIDCAuthenticationBackend',
)

# OIDC_RP_CLIENT_ID = "0oar0sd9n4GGqrD1y697"
# OIDC_RP_CLIENT_SECRET = "00sIHuFR78ma0_Qs3GjiqTPnaMrd7QtykjVdB12PkL"
# OIDC_OP_AUTHORIZATION_ENDPOINT = "https://trial-1988947.okta.com/oauth2/v1/authorize"
# OIDC_OP_TOKEN_ENDPOINT = "https://trial-1988947.okta.com/oauth2/v1/token"
# OIDC_OP_USER_ENDPOINT = "https://trial-1988947.okta.com/oauth2/v1/userinfo"

OKTA_DOMAIN =  "dev-10693315.okta.com"
# OIDC_RP_CLIENT_ID = "0oar3j5tpyCZt1kXS697"
OIDC_RP_CLIENT_ID = "0oaojxzladhNdfBYT5d7"

# OIDC_RP_CLIENT_SECRET = "49TcpVVj3dXOkpHJJgqtxi4VzealsSYDeQoVbNYPZHftbo4_-eA9RR2lgOXtLDQM"
OIDC_RP_CLIENT_SECRET ="X4Xib2ce5iFaDiNV2P5himnvmMH3YyTKXq7KeSB-PuHIkVE9E2mvZ9Cjtx4Mrxx3"
OIDC_RP_SIGN_ALGO = "RS256"
OIDC_OP_AUTHORIZATION_ENDPOINT = f"https://{OKTA_DOMAIN}/oauth2/default/v1/authorize" # The OIDC authorization endpoint
OIDC_RP_TOKEN_ENDPOINT = f"https://{OKTA_DOMAIN}/oauth2/default/v1/token" # The OIDC token endpoint
OIDC_OP_USER_ENDPOINT = f"https://{OKTA_DOMAIN}/oauth2/default/v1/userinfo" # The OIDC userinfo endpoint
OIDC_OP_TOKEN_ENDPOINT = f"https://{OKTA_DOMAIN}/oauth2/default/v1/token" # The OIDC token endpoint
OIDC_OP_JWKS_ENDPOINT = f"https://{OKTA_DOMAIN}/oauth2/default/v1/keys" # The OIDC JWKS endpoint
OIDC_RP_CALLBACK_URL = 'http://recarnation-env.eba-9q4kewpk.us-east-1.elasticbeanstalk.com/authorization-code/callback/'

# Optional settings for django-allauth
LOGIN_REDIRECT_URL = '/' # Redirect after login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout

AWS_STORAGE_BUCKET_NAME = 'recarnation-frontend-857114650f65563c' # From terraform output
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
